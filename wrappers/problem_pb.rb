# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: problem.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("problem.proto", :syntax => :proto3) do
    add_message "problem.Matrix" do
      repeated :time, :float, 1
      repeated :distance, :float, 2
    end
    add_message "problem.Location" do
      optional :longitude, :double, 1
      optional :latitude, :double, 2
      optional :matrix_index, :uint32, 3
    end
    add_message "problem.Service" do
      repeated :quantities, :float, 1
      optional :duration, :float, 2
      optional :matrix_index, :uint32, 3
      repeated :compatible_vehicle_indices, :uint32, 4
      repeated :skills, :string, 5
      repeated :day_indices, :int32, 6
      optional :location, :message, 7, "problem.Location"
      optional :name, :string, 9
      optional :visits, :uint32, 10
    end
    add_message "problem.Capacity" do
      optional :limit, :float, 1
    end
    add_message "problem.Vehicle" do
      optional :name, :string, 1
      repeated :capacities, :message, 2, "problem.Capacity"
      optional :start_location, :message, 4, "problem.Location"
      optional :end_location, :message, 5, "problem.Location"
      optional :duration, :double, 6
      repeated :day_indices, :int32, 7
      optional :matrix_index, :uint32, 8
      repeated :skills, :string, 9
      repeated :load, :float, 11
      optional :metric_limit, :double, 12
      optional :initial_centroid, :message, 13, "problem.Location"
      repeated :assigned_service_indices, :uint32, 14
    end
    add_message "problem.Solution" do
      repeated :assignment, :int32, 1
    end
    add_message "problem.Options" do
      optional :max_iteration, :uint32, 1
      optional :cut_index, :uint32, 2
      optional :cut_ratio, :double, 3
    end
    add_message "problem.Problem" do
      repeated :vehicles, :message, 1, "problem.Vehicle"
      repeated :services, :message, 2, "problem.Service"
      repeated :matrices, :message, 3, "problem.Matrix"
      optional :solutions, :message, 4, "problem.Solution"
      repeated :unit_labels, :string, 5
      optional :options, :message, 6, "problem.Options"
      optional :cumulated_metric, :double, 7
    end
  end
end

module Problem
  Matrix = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Matrix").msgclass
  Location = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Location").msgclass
  Service = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Service").msgclass
  Capacity = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Capacity").msgclass
  Vehicle = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Vehicle").msgclass
  Solution = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Solution").msgclass
  Options = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Options").msgclass
  Problem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("problem.Problem").msgclass
end
